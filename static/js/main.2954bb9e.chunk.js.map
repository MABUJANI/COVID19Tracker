{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","statedata","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterButton","variant","start","end","active","value","duration","separator","Date","toDateString","cured","death","url","indiaurl","fetchData","country","a","changeableUrl","axios","get","fetchStateData","state","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","fetchStates","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","handleStateChange","fetchedCountries","setFetchedCountries","fetchedStates","setFetchedStates","fetchStatesData","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","props","fetchedData","setState","fetchedStateData","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2954bb9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__21xc5\",\"card\":\"Cards_card__38aSv\",\"infected\":\"Cards_infected__2PWrp\",\"recovered\":\"Cards_recovered__22bXi\",\"deaths\":\"Cards_deaths__WQcA_\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css';\r\n \r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate},statedata} ) => {\r\n    \r\n    console.log(statedata,confirmed);\r\n\r\n    if(!confirmed){\r\n        return \"Loading...\"; \r\n    }\r\n    \r\n    \r\n    return( \r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className ={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterButton>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp \r\n                          start = {0}\r\n                          \r\n                          end = {statedata?statedata[0].active:confirmed.value}\r\n                          duration = {2.5}\r\n                          separator = \",\"\r\n                        />\r\n                        </Typography>\r\n    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className ={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterButton>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp \r\n                          start = {0}\r\n                          end = {statedata?statedata[0].cured:recovered.value}\r\n                          duration = {2.5}\r\n                          separator = \",\"\r\n                        />\r\n                        </Typography>\r\n    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item component={Card} xs={12} md={3} className ={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterButton>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp \r\n                          start = {0}\r\n                          end = {statedata?statedata[0].death:deaths.value}\r\n                          duration = {2.5}\r\n                          separator = \",\"\r\n                        />\r\n                        </Typography>\r\n    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconst indiaurl = \"https://covid19-india-adhikansh.herokuapp.com\";\r\n\r\nexport const fetchData = async (country)=>\r\n{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n         console.log(confirmed,recovered,deaths,lastUpdate);\r\n\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch (error) {\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const fetchStateData = async (state)=>\r\n{\r\n    let changeableUrl;\r\n    if(state){\r\n        changeableUrl = `${indiaurl}/state/${state}`;\r\n    }\r\n    try {\r\n        const {data:{data}} = await axios.get(changeableUrl);\r\n         console.log(data);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fetchCountries = async()=>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        console.log(countries);\r\n        return countries.map((country)=>country.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchStates = async()=>{\r\n    try {\r\n        const {data:{state}} = await axios.get(`${indiaurl}/states`);\r\n       \r\n        \r\n        console.log(state);\r\n        return state.map((state)=>state.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line,Bar} from 'react-chartjs-2'\r\n\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths},country,statedata,state}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setDailyData ( await fetchDailyData());\r\n\r\n        }\r\n    \r\n        fetchAPI();\r\n        \r\n        },[]); \r\n\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed})=>confirmed),\r\n                    label:'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n                },{\r\n                    data: dailyData.map(({deaths})=>deaths),\r\n                    label:'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n        />):null\r\n    );\r\nconsole.log(\"data\", confirmed,recovered,deaths);\r\n\r\n    const barChart = (\r\n        confirmed?(\r\n            <Bar \r\n            data ={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)',],\r\n                \r\n                data:statedata?[statedata[0].active,statedata[0].cured,statedata[0].death]:[confirmed.value,recovered.value,deaths.value]\r\n            }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:statedata?{display:true,text:`Current state in ${state}`}:{display:true,text:`Current state in ${country}`}\r\n            }}\r\n            \r\n            />\r\n\r\n        ):null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart:lineChart}\r\n\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core'; \r\n\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\nimport {fetchStates} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange,handleStateChange}) => {\r\n\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n    const [fetchedStates,setFetchedStates] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async ()=>{\r\n            setFetchedCountries( await fetchCountries());\r\n            \r\n\r\n        }\r\n        const fetchStatesData = async ()=>{\r\n            setFetchedStates( await fetchStates());\r\n        }\r\n        \r\n        fetchAPI();\r\n        fetchStatesData();\r\n        \r\n    },[setFetchedCountries],[setFetchedStates])\r\n    console.log(fetchedCountries);\r\n    console.log(fetchedStates);\r\n   \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>{handleStateChange(e.target.value)}}>\r\n                {fetchedStates.map((state,i)=><option key={i} value={state}>{state}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards,Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData,fetchStateData} from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             data:{},\r\n             statedata:{},\r\n             country:'',\r\n             state:''\r\n        }\r\n    }\r\n    \r\n\r\n\r\n   async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        const fetchedStateData = await fetchStateData();\r\n        this.setState({data:fetchedData,statedata:fetchedStateData});\r\n    }\r\n\r\n    handleCountryChange = async (country)=>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData,country:country})\r\n    }\r\n    handleStateChange = async(state)=>{\r\n        console.log(state);\r\n        const fetchedStateData = await fetchStateData(state);\r\n        this.setState({statedata: fetchedStateData,state:state})\r\n\r\n    }\r\n    render(){\r\n        // console.log(\"state\",this.state.statedata);\r\n        // console.log(this.state.data);\r\n        \r\n\r\n        const {data,statedata,country,state} = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n            <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n            <Cards data={data} statedata={ statedata}/>\r\n            <CountryPicker handleCountryChange= {this.handleCountryChange} handleStateChange={this.handleStateChange}/>\r\n            <Chart data={data} statedata={statedata} state={state} country={country}/>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1my0t\",\"image\":\"App_image__VtN-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1RW-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2booR\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}